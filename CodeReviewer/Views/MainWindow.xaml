<ui:FluentWindow x:Class="CodeReviewer.Views.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                 xmlns:ww2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
                 xmlns:local="clr-namespace:CodeReviewer.Models.Languages"
                 xmlns:utils="clr-namespace:CodeReviewer.Utils"
                 xmlns:viewModels="clr-namespace:CodeReviewer.ViewModels"
                 Width="1250"
                 Height="652"
                 d:DesignHeight="650"
                 d:DesignWidth="900"
                 ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
                 ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                 WindowStartupLocation="CenterOwner"
                 mc:Ignorable="d"
                 d:DataContext="{d:DesignInstance viewModels:EditorViewModal}"
                 ExtendsContentIntoTitleBar="True"
                 WindowBackdropType="Mica"
                 WindowCornerPreference="Default"
                 Icon="../Resources/CR.ico">
    <Window.Resources>
        <ObjectDataProvider x:Key="GetAllLanguagesProvider" MethodName="GetAllLanguages"
                            ObjectType="{x:Type local:ProgrammingLanguages}" />
        <utils:UpperCaseWithSuffixConverter x:Key="UpperCaseWithSuffixConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding
            Command="{Binding ToggleFullScreen, Mode=OneWay}"
            Key="{Binding ToggleFullScreen.GestureKey}"
            Modifiers="{Binding ToggleFullScreen.GestureModifier}" />
        <KeyBinding
            Command="{Binding OpenNewWindow, Mode=OneWay}"
            Key="{Binding OpenNewWindow.GestureKey}"
            Modifiers="{Binding OpenNewWindow.GestureModifier}" />
        <KeyBinding
            Command="{Binding SaveFile, Mode=OneWay}"
            Key="{Binding SaveFile.GestureKey}"
            Modifiers="{Binding SaveFile.GestureModifier}" />
        <KeyBinding
            Command="{Binding OpenFile, Mode=OneWay}"
            Key="{Binding OpenFile.GestureKey}"
            Modifiers="{Binding OpenFile.GestureModifier}" />
        <KeyBinding
            Command="{Binding NewFile, Mode=OneWay}"
            Key="{Binding NewFile.GestureKey}"
            Modifiers="{Binding NewFile.GestureModifier}" />
        <KeyBinding
            Command="{Binding ViewLog, Mode=OneWay}"
            Key="{Binding ViewLog.GestureKey}"
            Modifiers="{Binding ViewLog.GestureModifier}" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ui:TitleBar
            Title="{Binding WindowTitle}"
            Grid.Row="0"
            Icon="{ui:SymbolIcon Code20}" />

        <Menu
            Grid.Row="1"
            Margin="0"
            Background="Transparent"
            FontSize="14">
            <!--New File tab-->
            <ui:MenuItem Header="File" Icon="{ui:SymbolIcon DocumentSplitHint20}"
                         InputGestureText="{Binding NewFile.GestureKeyText}">
                <ui:MenuItem Header="New File">
                    <ui:MenuItem.ItemsSource>
                        <Binding Source="{StaticResource GetAllLanguagesProvider}" />
                    </ui:MenuItem.ItemsSource>
                    <ui:MenuItem.ItemTemplate>
                        <DataTemplate>
                            <TextBlock
                                Text="{Binding Name, Converter={StaticResource UpperCaseWithSuffixConverter}, ConverterParameter=' File'}">
                                <TextBlock.InputBindings>
                                    <MouseBinding Gesture="LeftClick"
                                                  Command="{Binding DataContext.NewFile, RelativeSource={RelativeSource AncestorType={x:Type ui:MenuItem}}}"
                                                  CommandParameter="{Binding Name}" />
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </DataTemplate>
                    </ui:MenuItem.ItemTemplate>
                </ui:MenuItem>
                <MenuItem
                    Command="{Binding OpenFile, Mode=OneWay}"
                    CommandParameter="openFile"
                    Header="Open..."
                    InputGestureText="{Binding OpenFile.GestureKeyText}" />
                <MenuItem
                    Command="{Binding SaveFile, Mode=OneWay}"
                    CommandParameter="saveFile"
                    Header="Save"
                    InputGestureText="{Binding SaveFile.GestureKeyText}" />
                <!--<MenuItem
                    Command="{Binding ViewModel.MenuActionCommand, Mode=OneWay}"
                    CommandParameter="saveFileAs"
                    Header="Save As..." />-->
                <Separator />
                <MenuItem
                    Command="{Binding Exit, Mode=OneWay}"
                    CommandParameter="exit"
                    Header="Exit" />
            </ui:MenuItem>
            <ui:MenuItem Header="Window" Icon="{ui:SymbolIcon Window20}">
                <MenuItem
                    Command="{Binding OpenNewWindow, Mode=OneWay}"
                    CommandParameter="newWindow"
                    Header="New Window"
                    InputGestureText="{Binding OpenNewWindow.GestureKeyText}" />
                <MenuItem
                    Command="{Binding ToggleFullScreen, Mode=OneWay}"
                    Header="Toggle Full Screen"
                    InputGestureText="{Binding ToggleFullScreen.GestureKeyText}" />
            </ui:MenuItem>
            <ui:MenuItem Header="Help" Icon="{ui:SymbolIcon ChatHelp20}">
                <MenuItem
                    Command="{Binding OpenGitHubRepo, Mode=OneWay}"
                    Header="GitHub Link" />
                <MenuItem
                    Command="{Binding ReportBug, Mode=OneWay}"
                    Header="Report a Bug Link" />
                <MenuItem
                    Command="{Binding ViewLog, Mode=OneWay}"
                    Header="View Log" 
                    InputGestureText="{Binding ViewLog.GestureKeyText}" />
                <MenuItem
                    Command="{Binding OpenAboutWindowCommand, Mode=OneWay}"
                    Header="About" />
            </ui:MenuItem>
            <!--<Separator />
            <ui:MenuItem Header="Help" Icon="{ui:SymbolIcon ChatHelp20}">
                <MenuItem
                    Command="{Binding ViewModel.MenuActionCommand, Mode=OneWay}"
                    CommandParameter="viewHelp"
                    Header="View help" />
                <MenuItem
                    Command="{Binding ViewModel.MenuActionCommand, Mode=OneWay}"
                    CommandParameter="viewFeedback"
                    Header="Send feedback" />
                <Separator />
                <MenuItem
                    Command="{Binding ViewModel.MenuActionCommand, Mode=OneWay}"
                    CommandParameter="viewAbout"
                    Header="About WPF UI" />
            </ui:MenuItem>-->
        </Menu>
        
        <StackPanel 
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            >
        </StackPanel>
        
        <Grid Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="4px" />
                <ColumnDefinition Width="Auto" Name="SideBarWindowColumnDefinition"/>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <!--<TreeView
                Grid.Column="0"
                x:Name="TreeView"
                AllowDrop="True"
                Margin="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Stretch" 
                >
                <TreeViewItem Header="Opened Files">
                    
                </TreeViewItem>
            </TreeView>-->
            
            <ww2:WebView2
                Grid.Column="1"
                x:Name="WebView"
                Margin="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />
            
            <GridSplitter Name="GridSplitter" Grid.Column="2" Width="4px" HorizontalAlignment="Stretch" Background="Gray"/>
            
            <ScrollViewer Name="ScrollViewer" Grid.Column="3" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch">
                <StackPanel
                    Name="ChatPanel" 
                    VerticalAlignment="Stretch" 
                    HorizontalAlignment="Stretch"
                    Visibility="Visible"
                    d:DataContext="{d:DesignInstance viewModels:SideBarViewModel}">
                    <!-- Wrapping the StackPanel with ScrollViewer for dynamic content growth -->
                    <ui:RichTextBox
                        Name="ChatTextBox"
                        Margin="8,8" 
                        Padding="4,4"
                        HorizontalAlignment="Center"
                        Width="{Binding Path=ActualWidth, ElementName=ChatPanel, Mode=OneWay}">
                    </ui:RichTextBox >
                </StackPanel>
            </ScrollViewer>
            <StackPanel Grid.Column="4" d:DataContext="{d:DesignInstance viewModels:SideBarViewModel}">
                <ui:Button
                    Name="ChatButton"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Padding="5"
                    ToolTip="Chat with the bot"
                    Command="{Binding ChatButtonCommand}"
                    Icon="{ui:SymbolIcon Chat20}"
                    Appearance="Primary"/>
            </StackPanel>
        </Grid>

        <StatusBar
            x:Name="RootStatusBar"
            Grid.Row="3"
            MinHeight="0"
            Margin="0"
            Padding="8,2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <!--<StatusBarItem>
                <ui:SymbolIcon Foreground="{DynamicResource TextFillColorSecondaryBrush}" Symbol="BranchFork24" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="1" Margin="0,0,4,0">
                <TextBlock Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="Development *" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2" Margin="4,0,4,0">
                <ui:SymbolIcon Foreground="{DynamicResource TextFillColorSecondaryBrush}" Symbol="Home24" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="3" Margin="4,0,4,0">
                <ui:SymbolIcon Foreground="{DynamicResource TextFillColorSecondaryBrush}" Symbol="Fire24" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4" Margin="4,0,4,0">
                <TextBlock Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="Wpf.Ui.sln" />
            </StatusBarItem>-->
            <StatusBarItem Grid.Column="6">
                <TextBlock Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="{Binding InfoText}" />
            </StatusBarItem>
        </StatusBar>

    </Grid>
</ui:FluentWindow>
